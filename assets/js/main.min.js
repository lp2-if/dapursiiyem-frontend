'use strict';

/*! [PROJECT_NAME] | Suitmedia */

(function (window, document, undefined) {

    var api = 'http://127.0.0.1:8000/api/v1/';
    //const api = 'http://10.151.252.230/api/v1/'
    /* loadJSON('env.json').then(val => {
        api = `http://${val.target}/api/v1/`
    }) */

    var path = {
        css: myPrefix + 'assets/css/',
        js: myPrefix + 'assets/js/vendor/'
    };

    var assets = {
        _objectFit: path.js + 'object-fit-images.min.js'
    };

    var Site = {
        enableActiveStateMobile: function enableActiveStateMobile() {
            if (document.addEventListener) {
                document.addEventListener('touchstart', function () {}, true);
            }
        },
        WPViewportFix: function WPViewportFix() {
            if ('-ms-user-select' in document.documentElement.style && navigator.userAgent.match(/IEMobile/)) {
                var style = document.createElement('style');
                var fix = document.createTextNode('@-ms-viewport{width:auto!important}');

                style.appendChild(fix);
                document.head.appendChild(style);
            }
        },
        objectFitPolyfill: function objectFitPolyfill() {
            load(assets._objectFit).then(function () {
                objectFitImages();
            });
        },
        angularModule: function angularModule() {
            angular.module('dapur-app', ['ngRoute', 'ngSanitize']).controller('mainController', ['$scope', '$http', function ($scope, $http) {
                $scope.modalActive = false;
                $scope.resepListActive = false;
                $scope.isLoading = true;
                $scope.resepList = [];
                $scope.bahanSelected = [];
                $scope.bahan = [];

                $scope.modalTrigger = function () {
                    $scope.modalActive = !$scope.modalActive;
                };

                $scope.resepTrigger = function () {
                    $scope.resepListActive = !$scope.resepListActive;
                };

                $scope.isBahanEmpty = function () {
                    if ($scope.bahanSelected.length === 0) return true;
                };

                $scope.selectBahan = function (itemId) {
                    if ($scope.bahanSelected.filter(function (item) {
                        return item == itemId;
                    }).length === 0) {
                        $scope.bahanSelected.push(itemId);
                    } else {
                        $scope.bahanSelected = $scope.bahanSelected.filter(function (item) {
                            return item !== itemId;
                        });
                    }

                    $scope.bahan = $scope.bahan.map(function (curr, index) {
                        if (curr.id === itemId) {
                            curr['selected'] = !curr['selected'];
                        }
                        return curr;
                    });
                    //console.log($scope.bahanSelected)
                };

                $scope.getResepList = function () {
                    $scope.isLoading = true;

                    $http.post(api + 'food', $scope.bahanSelected).then(function (res) {
                        $scope.isLoading = false;
                        $scope.resepListActive = true;
                        $scope.resepList = res.data.data;
                        //console.log($scope.bahanSelected)
                    }).catch(function (err) {
                        $scope.isLoading = false;
                        alert('Error status: ' + err.status);
                        console.log(err);
                    });
                };

                $scope.loadBahan = function () {
                    $http.get(api + 'ingredient').then(function (res) {
                        $scope.isLoading = false;
                        $scope.bahan = res.data.data.map(function (curr) {
                            var val = Object.assign({ selected: false }, curr);
                            return val;
                        });
                        //console.log($scope.bahan)
                    }).catch(function (err) {
                        $scope.isLoading = false;
                        alert('Error status: ' + err.status);
                        console.log(err);
                    });
                };
            }]).controller('resepController', ['$http', '$scope', '$routeParams', '$sce', function ($http, $scope, $routeParams, $sce) {
                $scope.idResep = $routeParams.id;
                $scope.isLoading = true;

                $http.get(api + 'food/' + $scope.idResep).then(function (res) {
                    $scope.isLoading = false;
                    $scope.resep = res.data.data;
                    // console.log($scope.resep)
                }).catch(function (err) {
                    $scope.isLoading = false;
                    alert('Error status: ' + err.status);
                    console.log(err);
                });
            }]).controller('wikiController', ['$http', '$scope', '$sce', function ($http, $scope, $routeParams, $sce) {
                $scope.modalActive = false;
                $scope.glossaryDetail = {
                    img: 'assets/img/logo-big.png',
                    title: 'Menumis',
                    desc: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Pariatur quae repudiandae provident consectetur laudantium, ea minus esse accusantium dolore magni, ab consequatur consequuntur eius temporibus nobis ut nihil saepe nisi? consectetur laudantium, ea minus esse accusantium.'
                };

                $scope.modalWikiTrigger = function (title) {
                    $scope.glossaryDetail.title = title;
                    $scope.modalActive = !$scope.modalActive;
                };
            }]).config(['$routeProvider', '$locationProvider', function ($routeProvider, $locationProvider) {
                $routeProvider.when('/', {
                    templateUrl: 'home.html',
                    controller: 'mainController'
                }).when('/resep/:id?', {
                    templateUrl: 'resep.html',
                    controller: 'resepController'
                }).otherwise({
                    redirectTo: '404.html'
                });
            }]);
        }
    };

    Promise.all([]).then(function () {
        for (var fn in Site) {
            Site[fn]();
        }
        window.Site = Site;
    });

    function exist(selector) {
        return new Promise(function (resolve, reject) {
            var $elem = $(selector);

            if ($elem.length) {
                resolve($elem);
            } else {
                reject('no element found for ' + selector);
            }
        });
    }

    function load(url) {
        return new Promise(function (resolve, reject) {
            Modernizr.load({
                load: url,
                complete: resolve
            });
        });
    }

    function loadJSON(url) {
        return new Promise(function (resolve, reject) {
            fetch(url).then(function (res) {
                if (res.ok) {
                    resolve(res.json());
                } else {
                    reject('Network response not ok');
                }
            }).catch(function (e) {
                reject(e);
            });
        });
    }
})(window, document);